{  
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{  
    "virtualMachineName":{  
      "type":"string",
      "defaultValue":"",
      "metadata":{  
        "description":"The name of the Virtual Machine"
      }
    },
    "virtualMachineSize":{  
      "type":"string",
      "defaultValue":"Standard_D2_v2",
      "allowedValues":[
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_A2m_v2",
        "Standard_A4m_v2",
        "Standard_A8m_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32",
        "Standard_NV6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NC6",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_H8",
        "Standard_H16",
        "Standard_H8m",
        "Standard_H16m",
        "Standard_H16r",
        "Standard_H16mr",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s"
      ],
      "metadata":{  
        "description":"The size of the Virtal Machine. For encrypted VMs, Basic tier cannot be chosen. For more information: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes-general"
      }
    },
    "SizeOfDataDiskInGB":{  
      "type":"string",
      "defaultValue":"1023",
      "metadata":{  
        "description":"The size of the Data Disk to be attached to the Virtual Machine"
      }
    },
    "VirtualMachinePurpose":{  
      "defaultValue":"",
      "type":"string",
      "metadata":{  
        "description":"The purpose of the Virtual Machine. This will populate the Purpose tag."
      }
    },
    "StartupHour":{  
      "type":"string",
      "defaultValue":"7",
      "metadata":{  
        "description":"The startup hour of the Virtual Machine, in 24 hour clock. This will populate the StartupHour tag"
      }
    },
    "Shutdownhour":{  
      "type":"string",
      "defaultValue":"21",
      "metadata":{  
        "description":"The shutdown hour of the Virtual Machine, in 24 hour clock. This will populate the ShutdownHour tag"
      }
    },
    "WeekendOn":{  
      "type":"string",
      "defaultValue":"False",
      "metadata":{  
        "description":"True to keep starting up / shutting down the VM on the weekend. False to keep the VM off on the weekend"
      }
    },
    "virtualNetworkName":{  
      "type":"string",
      "defaultValue":"Puppet-Demo",
      "metadata":{  
        "description":"The name of the virtual network"
      }
    },
    "networkInterfaceName":{  
      "type":"string",
      "defaultValue":"nic-puppetdemo",
      "metadata":{  
        "description":"The name of the network interface that will be created and attached"
      }
    },
    "subnetName":{  
      "type":"string",
      "defaultValue":"default",
      "metadata":{  
        "description":"The name of the subnet that will be created and attached"
      }
    },
    "addressPrefix":{  
      "type":"string",
      "defaultValue":"10.0.0.0/16",
      "metadata":{  
        "description":"The address space for the new virtual network"
      }
    },
    "subnetPrefix":{  
      "type":"string",
      "defaultValue":"10.0.0.0/24",
      "metadata":{  
        "description":"The subnet address range for the new virtual network. The subnet's address range in CIDR notation. It must be contained by the address space of the virtual network. The address range of a subnet which is in use can't be edited."
      }
    },
    "networkSecurityGroupsName":{  
      "type":"String",
      "defaultValue":"nsg-puppetdemo",
      "metadata":{  
        "description":"The name of the network security group that will be created and attached"
      }
    },
    "adminUsername":{  
      "type":"string",
      "defaultValue":"puppetagent",
      "metadata":{  
        "description":"The admin username for the Virtual Machine."
      }
    },
    "adminPassword":{  
      "type":"securestring",
      "defaultValue":"Miner7654321",
      "metadata":{  
        "description":"The admin password for the Virtual Machine."
      }
    },
    "windowsOSVersion":{  
      "type":"string",
      "defaultValue":"2016-Datacenter",
      "allowedValues":[  
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Nano-Server",
        "2016-Datacenter-with-Containers",
        "2016-Datacenter"
      ],
      "metadata":{  
        "description":"The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "storageAccountName":{  
      "type":"string",
      "defaultValue":"",
      "metadata":{  
        "description":"The name of the storage account to be created or exists already"
      }
    }
  },
  "variables":{  
    "subnetRef":"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "OSDiskName":"[concat(parameters('virtualMachineName'),'OSDisk')]",
    "DataDiskName":"[concat(parameters('virtualMachineName'),'DataDisk'])"
  },
  "resources":[  
    {  
      "type":"Microsoft.Storage/storageAccounts",
      "name":"[parameters('storageAccountName')]",
      "apiVersion":"2016-01-01",
      "location":"[resourceGroup().location]",
      "sku":{  
        "name":"Standard_LRS"
      },
      "kind":"Storage",
      "properties":{  
        "encryption":{  
          "keySource":"Microsoft.Storage",
          "services":{  
            "blob":{  
              "enabled":"[parameters('blobEncryptionEnabled')]"
            }
          }
        }
      }
    },
    {  
      "apiVersion":"2016-03-30",
      "type":"Microsoft.Network/virtualNetworks",
      "name":"[parameters('virtualNetworkName')]",
      "location":"[resourceGroup().location]",
      "properties":{  
        "addressSpace":{  
          "addressPrefixes":[  
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets":[  
          {  
            "name":"[parameters('subnetName')]",
            "properties":{  
              "addressPrefix":"[parameters('subnetPrefix')]",
              "networkSecurityGroup":{  
                "id":"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]"
              }
            }
          }
        ]
      },
      "dependsOn":[  
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]"
      ]
    },
    {  
      "apiVersion":"2016-03-30",
      "type":"Microsoft.Network/networkInterfaces",
      "name":"[parameters('networkInterfaceName')]",
      "location":"[resourceGroup().location]",
      "dependsOn":[  
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]"
      ],
      "properties":{  
        "ipConfigurations":[  
          {  
            "name":"ipconfig1",
            "properties":{  
              "privateIPAllocationMethod":"Dynamic",
              "subnet":{  
                "id":"[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup":{  
          "id":"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]"
        }
      }
    },
    {  
      "type":"Microsoft.Network/networkSecurityGroups",
      "name":"[parameters('networkSecurityGroupsName')]",
      "apiVersion":"2016-03-30",
      "location":"canadacentral",
      "properties":{  
        "securityRules":[  
          {  
            "name":"default-allow-rdp",
            "properties":{  
              "protocol":"TCP",
              "sourcePortRange":"*",
              "destinationPortRange":"3389",
              "sourceAddressPrefix":"*",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "priority":1000,
              "direction":"Inbound"
            }
          }
        ]
      },
      "dependsOn":[  

      ]
    },
    {  
      "apiVersion":"2016-04-30-preview",
      "type":"Microsoft.Compute/virtualMachines",
      "name":"[parameters('virtualMachineName')]",
      "location":"[resourceGroup().location]",
      "tags":{  
        "Purpose":"[parameters('VirtualMachinePurpose')]",
        "ShutdownHour":"[parameters('ShutdownHour')]",
        "StartupHour":"[parameters('StartupHour')]",
        "WeekendOn":"[parameters('WeekendOn')]"
      },
      "dependsOn":[  
        "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupsName'))]"
      ],
      "properties":{  
        "hardwareProfile":{  
          "vmSize":"[parameters('virtualMachineSize')]"
        },
        "osProfile":{  
          "computerName":"[parameters('virtualMachineName')]",
          "adminUsername":"[parameters('adminUsername')]",
          "adminPassword":"[parameters('adminPassword')]"
        },
        "storageProfile":{  
          "imageReference":{  
            "publisher":"MicrosoftWindowsServer",
            "offer":"WindowsServer",
            "sku":"[parameters('windowsOSVersion')]",
            "version":"latest"
          },
          "osDisk":{  
            "name":"OSDiskName",
            "caching":"ReadWrite",
            "createOption":"FromImage",
            "vhd":{  
              "uri":"[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/vhds/', 'OSDisk', '.vhd')]"
            }
          },
          "dataDisks":[  
            {  
              "name":"DataDisk",
              "diskSizeGB":"[parameters('SizeOfDataDiskInGB')]",
              "lun":0,
              "caching":"ReadOnly",
              "createOption":"Empty",
              "vhd":{  
                "uri":"[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/vhds/', 'DataDisk', '.vhd')]"
              }
            }
          ]
        },
        "networkProfile":{  
          "networkInterfaces":[  
            {  
              "id":"[resourceId('Microsoft.Network/networkInterfaces',parameters('networkInterfaceName'))]"
            }
          ]
        },
        "diagnosticsProfile":{  
          "bootDiagnostics":{  
            "enabled":"true",
            "storageUri":"[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    }
  ]
}